AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  voltage-api

  SAM Template for voltage-api

Globals:
  Function:
    Runtime: python3.11
    Timeout: 3
    Environment:
      Variables:
        # TODO: change DYNAMODB_TABLE_NAME to REPORTS_TABLE
        DYNAMODB_TABLE_NAME: VoltageReportsTable
        LAST_REPORTS_TABLE: VoltageLastReportsTable
        REGION_NAME: !Ref AWS::Region


Resources:

  VoltageAPI:
      Type: AWS::Serverless::Api
      Properties:
        StageName: Prod
        Auth:
          DefaultAuthorizer: VoltageAuthorizer
          Authorizers:
            VoltageAuthorizer:
              UserPoolArn: !GetAtt VoltageUserPool.Arn


  AddNewReport:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/new_report
      Handler: new_report.lambda_handler
      Architectures:
        - x86_64
      Events:
        VoltageAPI:
          Type: Api
          Properties:
            RestApiId: !Ref VoltageAPI
            Path: /reports
            Method: POST
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ReportsTable

  ListLastReports:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/list_last
      Handler: list_last.lambda_handler
      Architectures:
        - x86_64
      Events:
        VoltageAPI:
          Type: Api
          Properties:
            RestApiId: !Ref VoltageAPI
            Path: /last_reports
            Method: GET
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ReportsTable

  ListStationReports:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/list_reports
      Handler: list_reports.lambda_handler
      Architectures:
        - x86_64
      Events:
        VoltageAPI:
          Type: Api
          Properties:
            RestApiId: !Ref VoltageAPI
            Path: /reports/{station}
            Method: GET
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ReportsTable

  StationLastReport:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/last_report
      Handler: last_report.lambda_handler
      Architectures:
        - x86_64
      Events:
        VoltageAPI:
          Type: Api
          Properties:
            RestApiId: !Ref VoltageAPI
            Path: /last_reports/{station}
            Method: GET
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ReportsTable

  StationReportCounts:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/report_counts
      Handler: report_counts.lambda_handler
      Architectures:
        - x86_64
      Events:
        VoltageAPI:
          Type: Api
          Properties:
            RestApiId: !Ref VoltageAPI
            Path: /reports/{station}/count
            Method: GET
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ReportsTable

  ReportsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: VoltageReportsTable
      AttributeDefinitions:
        - AttributeName: station
          AttributeType: S
        - AttributeName: date
          AttributeType: S
      KeySchema:
        - AttributeName: station
          KeyType: HASH
        - AttributeName: date
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

  LastReportsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: VoltageLastReportsTable
      AttributeDefinitions:
        - AttributeName: station
          AttributeType: S
        - AttributeName: date
          AttributeType: S
      KeySchema:
        - AttributeName: station
          KeyType: HASH
        - AttributeName: date
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

  VoltageUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true
      EmailConfiguration:
        EmailSendingAccount: COGNITO_DEFAULT
      # MfaConfiguration: OFF
      Policies:
        PasswordPolicy:
          MinimumLength: 6
          RequireLowercase: true
          RequireUppercase: true
          RequireNumbers: true
          RequireSymbols: false
      UsernameAttributes:
        - email

  VoltageUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref VoltageUserPool
      GenerateSecret: false